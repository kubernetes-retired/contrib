# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: rd
spec:
  ports:
  - port: 6379
    name: redis
  # *.redis.default.svc.cluster.local
  clusterIP: None
  selector:
    app: rd
---
apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: rd
spec:
  serviceName: "redis"
  replicas: 3
  template:
    metadata:
      annotations:
        # Flip this to false after each node is stable.
        # To check the stability of a node, see kubectl logs.
        pod.alpha.kubernetes.io/initialized: "false"
      labels:
        app: rd
    spec:
      containers:
      - name: rd
        image: bprashanth/k8s-redis:0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
          name: redis
        args:
        - --on-start="/on-start.sh"
        - --service=redis
        volumeMounts:
        # These volume mounts are persistent. They're like inline claims,
        # but not exactly because the names need to match exactly one of
        # the pet volumes.
        - name: datadir
          mountPath: /data/www
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
  volumeClaimTemplates:
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
