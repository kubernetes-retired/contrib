Github-fetcher
--------------

Fetches a github database and stores it in a MySQL local database.

For now, it downloads two types of resources:
- Issues (including pull-requests)
- Events (associated to issues)

Both these resources will allow us to:
- Compute average time-to-resolution for an issue/pull-request
- Compute time between label creation/removal: lgtm'd, merged
- break-down based on specific flags (size, priority, ...)

Limitations
===========

Limitations are mostly related to Github failing with 500 when trying to access
random pages (not in sequence). This is most likely due to the size of the
repository:

- Accessing comments API just never works
- Accessing random page of events fail quite often

The event API doesn't let you choose the order or start from a specific event,
so I wanted to download in reverse order and start by the last event we had in
database (by doing a binary search on page numbers). Unfortunately, you can't
read in reverse order (accessing the last page fails everytime) and reading a
random page number also fails.

Setup
=====

You need to create a MySQL server first. The program will run the DDL for you so
it should have the permission to do so (including creating/switch database).

For Kubernetes, we plan to run the database on Google Cloud SQL.

You can then run the program locally with:

    github-fetcher \
        --token-file=/token-file \
        --host=${database_ip} \
        --user=${database_user} \
        --password=${database_password}  \
        --database=${database_db}

The goal is to run it on a container on GKE:

    make deploy DATABASE=${database_ip} TOKEN=${token_file}
