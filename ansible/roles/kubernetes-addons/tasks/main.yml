---
- name: Assures addons dir exists
  file: path={{ kube_addons_dir }} state=directory

- include: generic-install.yml
  when: not is_atomic and not is_coreos

- name: Assures local addon dir exists
  local_action: file path={{ local_temp_addon_dir }} state=directory
  vars:
    ansible_become: false

- name: Make sure the system services namespace exists
  copy:
    src=common/namespace.yaml
    dest="{{ kube_config_dir }}/addons/namespace.yaml"

- include: dns.yml
  when: dns_setup

- include: cluster-monitoring.yml
  when: cluster_monitoring

- include: cluster-logging.yml
  when: cluster_logging

- include: kube-ui.yml
  when: kube_ui

- include: kube-dash.yml
  when: kube_dash

- name: Get kube-addons script from Kubernetes
  copy:
    src=common/kube-addons.sh
    dest={{ kube_script_dir }}/kube-addons.sh mode=0755
  notify:
    - restart kube-addons

- name: Get kube-addon-update script from Kubernetes
  copy:
    src=common/kube-addon-update.sh
    dest={{ kube_script_dir }}/kube-addon-update.sh mode=0755
  notify:
    - restart kube-addons


- name: Get Python image Dockerfile
  copy:
    src=common/python-image/
    dest={{ kube_script_dir }}/python-image
  when: is_coreos or (ansible_distribution == "Fedora" and is_atomic)
  register: kube_addons_python_image_dockerfile

- name: Build Python image to use in Kubernetes Addons
  shell: "docker build --pull -t python:2.7-slim-pyyaml {{ kube_script_dir }}/python-image"
  when: is_coreos or (ansible_distribution == "Fedora" and is_atomic) and kube_addons_python_image_dockerfile | changed

- name: Run kube-gen-token script to create {{ kube_token_dir }}/known_tokens.csv
  command: "{{ kube_script_dir }}/kube-gen-token.sh {{ item }}"
  environment:
    TOKEN_DIR: "{{ kube_token_dir }}"
  with_items:
    - "system:dns"
    - "system:monitoring"
    - "system:logging"
  register: gentoken
  changed_when: "'Added' in gentoken.stdout"
  notify:
    - restart apiserver
    - restart kube-addons

- name: Install kube-addons service
  template: src=kube-addons.service.j2 dest=/etc/systemd/system/kube-addons.service
  notify:
    - reload and restart kube-addons
  when: not (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15)

- name: Install kube-addons upstart configuration
  template: src=kube-addons.upstart.j2 dest=/etc/init/kube-addons.conf
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 15

- name: Enable and start kube addons
  service: name=kube-addons enabled=yes state=started
