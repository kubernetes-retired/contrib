---
- include: debian-install.yml
  when: ansible_distribution == "Debian"

- include: apt-docker-install.yml
  when: ansible_distribution == "Ubuntu"

- include: generic-install.yml
  when: ansible_distribution != "Debian" and ansible_distribution != "Ubuntu"

- name: Verify docker config files exists
  file: path={{ docker_config_dir }}/{{ item }} state=touch
  changed_when: false
  with_items:
    - docker
    - docker-network

- name: Turn down docker logging
  lineinfile: dest={{ docker_config_dir }}/docker regexp=^OPTIONS= line=OPTIONS="'--selinux-enabled --log-level=warn --log-opt max-size={{ container_log_size_max }} --log-opt max-file={{ container_log_file_max }}'"
  notify:
    - restart docker
  when: ansible_distribution != "Ubuntu"

- name: Install http_proxy into docker-network
  lineinfile: dest={{ docker_config_dir }}/docker-network regexp=^HTTP_PROXY= line=HTTP_PROXY="{{ http_proxy }}"
  when: http_proxy is defined
  notify:
    - restart docker

- name: Install https_proxy into docker-network
  lineinfile: dest={{ docker_config_dir }}/docker-network regexp=^HTTPS_PROXY= line=HTTPS_PROXY="{{ https_proxy }}"
  when: https_proxy is defined
  notify:
    - restart docker

- name: Install no-proxy into docker-network
  lineinfile: dest={{ docker_config_dir }}/docker-network regexp=^NO_PROXY= line=NO_PROXY="{{ no_proxy }}"
  when: no_proxy is defined
  notify:
    - restart docker

- name: Add any insecure registrys to docker config
  lineinfile: dest={{ docker_config_dir }}/docker regexp=^INSECURE_REGISTRY= line=INSECURE_REGISTRY="'{% for reg in insecure_registrys %}--insecure-registry={{ reg }} {% endfor %}'"
  when: insecure_registrys is defined and insecure_registrys > 0
  notify:
    - restart docker

- name: Enable and Start Docker
  service: name=docker enabled=yes state=started
  notify:
    - start docker

- name: Login into private docker registry
  shell: "docker login -u imageuser -p Nice2015! -e infra@yinnut.com https://{{ private_registry }}"

- name: Import default gcr pause image
  shell: 'if ! docker images | grep "beta.gcr.io/google_containers/pause"|grep "2.0" > /dev/null; then docker pull {{ private_registry }}/pause:2.0 && docker tag {{ private_registry }}/pause:2.0 beta.gcr.io/google_containers/pause:2.0; fi'

