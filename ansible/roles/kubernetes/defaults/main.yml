# Version of Kubernetes binaries
kube_version: 1.4.5

# Set source of kubernetes binaries
# Available: packageManager, localBuild, github-release, distribution-rpm
kube_source_type: packageManager

# The port that the Kubernetes apiserver component listens on.
kube_master_api_port: 443

# This directory is where all the additional scripts go
# that Kubernetes normally puts in /srv/kubernetes.
# This puts them in a sane location
kube_script_dir: /usr/libexec/kubernetes

# This directory is where all the additional config stuff goes
# the kubernetes normally puts in /srv/kubernets.
# This puts them in a sane location.
# Editting this value will almost surely break something. Don't
# change it. Things like the systemd scripts are hard coded to
# look in here. Don't do it.
kube_config_dir: /etc/kubernetes

# The URL to download Kubernetes binaries from.
kube_download_url_base: https://storage.googleapis.com/kubernetes-release/release/v{{ kube_version }}/bin/linux/amd64

# The URL do download distribution rpms shipping kubernetes binaries from
kube_rpm_url_base: https://kojipkgs.fedoraproject.org//packages/kubernetes/1.2.0/0.27.git4a3f9c5.fc25/x86_64
kube_rpm_url_sufix: 1.2.0-0.27.git4a3f9c5.fc25.x86_64.rpm

# Directory to store downloaded Kubernetes releases
kube_releases_directory: /opt/kubernetes
kube_current_release_directory: "{{ kube_releases_directory }}/{{ kube_version }}"

# This is where all the cert scripts and certs will be located
kube_cert_dir: "{{ kube_config_dir }}/certs"

# The IP(s) for which the certificate will be valid
kube_cert_ip: "{{ hostvars[inventory_hostname]['ansible_all_ipv4_addresses'] | join (',IP:') }}"

# This is where all of the bearer tokens will be stored
kube_token_dir: "{{ kube_config_dir }}/tokens"

# This is where you can drop yaml/json files and the kubelet will run those
# pods on startup
kube_manifest_dir: "{{ kube_config_dir }}/manifests"

# This is the username that the cert creation scripts chown the
# cert files to. Not really changeable...
kube_cert_user: kube
# This is the group that the cert creation scripts chgrp the
# cert files to. Not really changeable...
kube_cert_group: kube-cert

# Internal DNS domain name.
# This domain must not be used in your network. Services will be discoverable
# under <service-name>.<namespace>.<domainname>, e.g.
# myservice.default.svc.cluster.local
dns_domain: "{{ cluster_name }}"

# IP address of the DNS server.
# Kubernetes will create a pod with several containers, serving as the DNS
# server and expose it under this IP address. The IP address must be from
# the range specified as kube_service_addresses. This magic will actually
# pick the 10th ip address in the kube_service_addresses range and use that.
dns_server: "{{ kube_service_addresses|ipaddr('net')|ipaddr(10)|ipaddr('address') }}"

open_cadvisor_port: false
open_kubelet_port: false

# Zero means doesn't listen cadvisor port at all, default port 4194
kubelet_cadvisor_port: 0

# apiserver should use ssh tunnell in case when you use private interface, see enable_kube_apiserver_ssh
kubelet_bind_address: "0.0.0.0"
#kubelet_bind_address: "127.0.0.1"
#kubelet_bind_address: "{{ hostvars[inventory_hostname]['ansible_'+private_interface]['ipv4']['address'] }}"

# Port which kubelet should listen
kubelet_port: 10250
# Zero means doesn't listen kubelet read-only port at all, default port 10255
kubelet_read_only_port: 0

# When "kubelet_bind_address" is unreachable outside the node
# (open_kubelet_port is true or kubelet_bind_address is "127.0.0.1") we will use ssh tunnel.
# In case when kubelet listens localhost, "exec" and "logs" commands could be inaccessible
# until https://github.com/kubernetes/kubernetes/pull/35693 PR is merged
enable_kube_apiserver_ssh: true
