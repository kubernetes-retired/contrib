---
# Prepare and write Flannel configuration to etcd.

- name: Set facts about etcdctl command
  set_fact:
    peers: "{% for hostname in groups['etcd'] %}{% if etcd_url_scheme is defined %}{{ etcd_url_scheme }}{% else %}http{% endif %}://{{ hostname }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}"
    conf_file: "/tmp/flannel-conf.json"
    conf_loc: "/{{ cluster_name }}/network/config"
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Create flannel config file to go in etcd
  template:
    src: flannel-conf.json.j2
    dest: "{{ conf_file }}"
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Load the flannel config file into etcd
  shell: "{{ bin_dir }}/etcdctl {% if etcd_url_scheme is defined and etcd_url_scheme == 'https' %} --cert-file={{ flannel_etcd_cert_file }} --key-file={{ flannel_etcd_key_file }} --ca-file={{ flannel_etcd_ca_file }} {% endif %}--no-sync --peers={{ peers }} set {{ conf_loc }} < {{ conf_file }}"
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"

- name: Clean up the flannel config file
  file:
    path: /tmp/flannel-config.json
    state: absent
  run_once: true
  delegate_to: "{{ groups['etcd'][0] }}"
