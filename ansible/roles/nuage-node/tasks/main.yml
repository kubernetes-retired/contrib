---
- name: Install iptables-services 
  become: yes
  yum: name=iptables-services state=present

- name: Install pip
  become: yes
  yum: name=python-pip state=present

- name: Install pykube
  become: yes
  pip: name=pykube version=0.13.0

- name: Start iptables-service 
  become: yes
  service: name=iptables state=started
 
- name: Install Nuage VRS
  become: yes
  yum: name={{ vrs_rpm }} state=present
  
- name: Set the uplink interface 
  become: yes
  lineinfile: dest={{ vrs_config }} regexp=^NETWORK_UPLINK_INTF line='NETWORK_UPLINK_INTF={{ uplink_interface }}'

- name: Set the Active Controller 
  become: yes
  lineinfile: dest={{ vrs_config }} regexp=^ACTIVE_CONTROLLER line='ACTIVE_CONTROLLER={{ vsc_active_ip }}'

- name: Set the Standby Controller 
  become: yes
  lineinfile: dest={{ vrs_config }} regexp=^STANDBY_CONTROLLER line='STANDBY_CONTROLLER={{ vsc_standby_ip }}'
  when: vsc_standby_ip is defined

- name: Install plugin rpm
  become: yes
  yum: name={{ plugin_rpm }} state=present

- include: certificates.yml

- name: Copy the kubeconfig
  become: yes
  copy: src=/tmp/nuage.kubeconfig  dest={{ nuage_node_kubeconfig }}

- name: Set the vsp-k8s.yaml 
  become: yes
  template: src=vsp-k8s.j2 dest={{ vsp_k8s_yaml }} owner=root mode=0644

- include: iptables.yml

- name: Remove existing kubelet network args
  become: yes
  lineinfile: dest="{{ kubelet_service_file }}" regexp='(.*)KUBELET_NETWORK_ARGS(.*)' state=absent
  ignore_errors: yes

- name: Add nuage plugin args
  become: yes
  lineinfile: dest="{{ kubelet_service_file }}" line="{{ nuage_plugin_kubelet_args }}" insertbefore='(.*)KUBELET_EXTRA_ARGS(.*)' 
  
- name: Add kubelet ExecStart
  become: yes
  lineinfile: dest="{{ kubelet_service_file }}" line="{{ kubelet_execstart }}"

- name: restart daemons
  command: /bin/true
  notify:
    - restart daemons
