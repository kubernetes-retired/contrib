{% macro systemd_docker_service(svc) %}
[Service]
ExecStartPre=/usr/bin/docker pull {{ svc.image }}
ExecStartPre=-/usr/bin/docker rm -f {{ svc.name }}
ExecStart=/usr/bin/docker run --name {{ svc.name }} {% if 'network_mode' in svc %}--net={{ svc.network_mode }}{% endif %} {%- for var in svc.env|default([]) %} -e {{ var }}{% endfor %} {%- for mount in svc.mounts|default([]) %} -v {{mount}}{% endfor %} {% if 'extra_opts' in svc %}{{ svc.extra_opts }}{% endif %} {{ svc.image }} {% if 'command' in svc %}{{ svc.command }}{% endif %}

ExecStop=/usr/bin/docker stop -t 10 {{ svc.name }}
Restart=on-failure
# Processes that do not register an handler for SIGTERM will be killed by
# the "docker stop" command after the timeout. The docker client that performs
# the "run" operation will then exit with code 137. Defining status 137 as
# successful prevents the systemd unit from entering "failed state".
SuccessExitStatus=0 137
TimeoutStartSec=0
TimeoutStopSec=1m
{% endmacro %}