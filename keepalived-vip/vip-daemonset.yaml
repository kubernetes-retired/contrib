apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-keepalived-vip
spec:
  template:
    metadata:
      labels:
        name: kube-keepalived-vip
    spec:
      hostNetwork: true
      # kube-keepalived-vip use a `modprobe ip_vs`, see
      # https://github.com/kubernetes/contrib/blob/8be3a141fd0d753ddcd8cbc23b74cbdd430394ba/keepalived-vip/utils.go#L232
      # which might not work on non-ubuntu system. When running this on CentOS,
      # use the following initContainer as workaround.
      # initContainers:
      #   - image: centos:7
      #     name: kube-keepalived-vip-modprobe
      #     imagePullPolicy: Always
      #     securityContext:
      #       privileged: true
      #     volumeMounts:
      #       - mountPath: /lib/modules
      #         name: modules
      #         readOnly: true
      #       - mountPath: /dev
      #         name: dev
      #     command: ['modprobe']
      #     args: ['ip_vs']
      containers:
        - image: gcr.io/google_containers/kube-keepalived-vip:0.11
          name: kube-keepalived-vip
          imagePullPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - mountPath: /dev
              name: dev
          # use downward API
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          # to use unicast
          args:
          - --services-configmap=default/vip-configmap
          # unicast uses the ip of the nodes instead of multicast
          # this is useful if running in cloud providers (like AWS)
          #- --use-unicast=true
          # vrrp version can be set to 2.  Default 3.
          #- --vrrp-version=2
      volumes:
        - name: modules
          hostPath:
            path: /lib/modules
        - name: dev
          hostPath:
            path: /dev
      nodeSelector:
        type: worker
