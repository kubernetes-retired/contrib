{{ $iface := .iface }}{{ $netmask := .netmask }}{{ $customIface := .customIface }}

global_defs {
  vrrp_version {{ .vrrpVersion }}
  vrrp_iptables {{ .iptablesChain }}
}

vrrp_instance vips {
  state BACKUP
  interface {{ $iface }}
  virtual_router_id {{ .vrid }}
  priority {{ .priority }}
  nopreempt
  advert_int 1

  track_interface {
    {{ if $customIface }}{{ $customIface }}{{ end }}{{ range $v, $vlan := .vlans }}
    {{ if $customIface }}{{ $customIface }}{{ else }}{{ $iface }}{{ end }}.{{ $vlan }}{{ end }}
  }

  {{ if .useUnicast }}
  unicast_src_ip {{ .myIP }}
  unicast_peer { {{ range .nodes }}
    {{ . }}{{ end }}
  }
  {{ end }}

  virtual_ipaddress { {{ range $i, $vip := .vips }}
    {{ $vip.IP }}/{{ $vip.Subnet }} dev {{ if $customIface }}{{ $customIface }}{{ else }}{{ $iface }}{{ end }}{{ if ne $vip.VlanId 0 }}.{{ $vip.VlanId }}{{ end }}{{ end }}
  }

  virtual_routes { {{ range $i, $vip := .vips }}
  {{ if and ($vip.Gateway) (ne $vip.VlanId 0) }}  {{ $vip.FullSubnet }} dev {{ if $customIface }}{{ $customIface }}{{ else }}{{ $iface }}{{ end }}.{{ $vip.VlanId }} src {{ $vip.IP }} table {{ tableid $vip.VlanId }}
    default via {{ $vip.Gateway }} table {{ tableid $vip.VlanId }} no_track{{ end }}
  {{ end }}
  }

  virtual_rules { {{ range $i, $vip := .vips }}
  {{ if and ($vip.Gateway) (ne $vip.VlanId 0) }}  from {{ $vip.IP }} table {{ tableid $vip.VlanId }}{{ end }}
  {{ end }}
  }

}

{{ range $j, $svc := .svcs }}
{{ if eq $svc.LVSMethod "VIP" }}
# VIP Service with no pods: {{ $svc.IP }}
{{ else }}
# Service: {{ $svc.Name }}
virtual_server {{ $svc.IP }} {{ $svc.Port }} {
  delay_loop 5
  lvs_sched wlc
  lvs_method {{ $svc.LVSMethod }}
  persistence_timeout 1800
  protocol {{ $svc.Protocol }}

  {{ range $k, $backend := $svc.Backends }}
  real_server {{ $backend.IP }} {{ $backend.Port }} {
    weight 1
    TCP_CHECK {
      connect_port {{ $backend.Port }}
      connect_timeout 3
    }
  }
{{ end }}
}
{{ end }}
{{ end }}
